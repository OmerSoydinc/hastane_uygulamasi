package com.mycompany.muayene.Forms.MainMenu;

import com.mycompany.muayene.Forms.IFrame;
import com.mycompany.muayene.Forms.MainMenu.MuayeneMenu.HastaOlusturForm;
import com.mycompany.muayene.Forms.MainMenu.MuayeneMenu.ReceteOlusturForm;
import com.mycompany.muayene.Forms.PreLoadedFrame;
import com.mycompany.muayene.Model.Doktor;
import com.mycompany.muayene.Model.Hasta;
import com.mycompany.muayene.Model.Recete;
import java.awt.event.ActionEvent;
import java.util.List;
import javax.swing.JPanel;

/**
 *
 * @author Mustafa
 */
public class MuayeneForm extends JPanel implements IFrame {

    private List<Doktor> doktorList;
    /**
     * Creates new form MuayeneForm
     */
    public MuayeneForm() {
        initComponents();
        hastaBilgileriGirButton.addActionListener(this::hastaBilgileriGirButtonActionPerformed);
        receteGirButton.addActionListener(this::receteGirButtonActionPerformed);
        kaydetButton.addActionListener(this::kaydetButtonActionPerformed);
        geriButton.addActionListener(this::geriButtonActionPerformed);
        silHastaButton.addActionListener(this::silHastaButtonActionPerformed);
        receteSilButton.addActionListener(this::receteSilButtonActionPerformed);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        selectDoctorBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        hastaBilgileriGirButton = new javax.swing.JButton();
        silHastaButton = new javax.swing.JButton();
        receteSilButton = new javax.swing.JButton();
        receteGirButton = new javax.swing.JButton();
        taniField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        kaydetButton = new javax.swing.JButton();
        geriButton = new javax.swing.JButton();
        statusField = new javax.swing.JLabel();

        jLabel1.setText("Doktor Seçiniz");

        hastaBilgileriGirButton.setText("Hasta Gir");

        silHastaButton.setText("Sil");

        receteSilButton.setText("Sil");

        receteGirButton.setText("Reçete Gir");

        jLabel2.setText("Tanı");

        kaydetButton.setText("Kaydet");

        geriButton.setText("Geri");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addComponent(kaydetButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(geriButton))
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(taniField)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                .addComponent(hastaBilgileriGirButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(silHastaButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 269, Short.MAX_VALUE)
                                .addComponent(receteGirButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(receteSilButton)))
                        .addContainerGap())
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(selectDoctorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(selectDoctorBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hastaBilgileriGirButton)
                    .addComponent(silHastaButton)
                    .addComponent(receteGirButton)
                    .addComponent(receteSilButton))
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(taniField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(statusField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(kaydetButton)
                        .addComponent(geriButton))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public JPanel getPanel() {
        return this.panel;
    }

    @Override
    public void update() {
        doktorList = Doktor.read();
        updateDoktorBox();
        updateEntryButtons();

    }

    private void updateEntryButtons() {
        if (HastaOlusturForm.getHasta() == null) {
            hastaBilgileriGirButton.setText("Hasta Gir");
            silHastaButton.setVisible(false);
        } else {
            hastaBilgileriGirButton.setText("Hastayı Düzenle");
            silHastaButton.setVisible(true);
        }
        if (ReceteOlusturForm.getRecete() == null) {
            receteGirButton.setText("Reçete Gir");
            receteSilButton.setVisible(false);
        } else {
            receteGirButton.setText("Reçeteyi Düzenle");
            receteSilButton.setVisible(true);
        }
    }

    private void updateDoktorBox() {
        selectDoctorBox.removeAllItems();
        doktorList.forEach(doktor -> selectDoctorBox.addItem(doktor.getAd() + " " + doktor.getSoyad()));
    }

    private void hastaBilgileriGirButtonActionPerformed(ActionEvent actionEvent) {
        PreLoadedFrame.MUAYENE_FRAME.setVisibility(false);
        PreLoadedFrame.HASTA_OLUSTUR_FRAME.setVisibility(true);
    }

    private void receteGirButtonActionPerformed(ActionEvent actionEvent) {
        PreLoadedFrame.MUAYENE_FRAME.setVisibility(false);
        PreLoadedFrame.RECETE_OLUSTUR_FRAME.setVisibility(true);
    }

    private void kaydetButtonActionPerformed(ActionEvent actionEvent) {
        Hasta hasta = HastaOlusturForm.getHasta();
        Recete recete = ReceteOlusturForm.getRecete();
        if (hasta == null) { savedStatusAnimation("Hasta girilmedi"); return; }
        if (recete == null) { savedStatusAnimation("Reçete girilmedi"); return; }
        if (taniField.getText().isEmpty()) { savedStatusAnimation("Tanı girilmedi"); return; }
        if (selectDoctorBox.getSelectedItem() == null) { savedStatusAnimation("Doktor seçilmedi"); return; }

        hasta.setTani(taniField.getText());
        hasta.setRecete(recete);
        Hasta.create(hasta);

        HastaOlusturForm.clearHasta();
        ReceteOlusturForm.clearRecete();
        savedStatusAnimation("Kaydedildi");

    }

    private void geriButtonActionPerformed(ActionEvent actionEvent) {
        PreLoadedFrame.MUAYENE_FRAME.setVisibility(false);
        PreLoadedFrame.HBYS_FRAME.setVisibility(true);
    }

    private void silHastaButtonActionPerformed(ActionEvent actionEvent) {
        HastaOlusturForm.clearHasta();
        updateEntryButtons();
    }

    private void receteSilButtonActionPerformed(ActionEvent actionEvent) {
        ReceteOlusturForm.clearRecete();
        updateEntryButtons();
    }

    private void savedStatusAnimation(String resultMessage) {
        new Thread(() -> {
            statusField.setText(resultMessage);
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            statusField.setText("");
        }).start();
    }

    @Override
    public String getTitle(){ return "Muayene Girişi"; }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton geriButton;
    private javax.swing.JButton hastaBilgileriGirButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton kaydetButton;
    private javax.swing.JPanel panel;
    private javax.swing.JButton receteGirButton;
    private javax.swing.JButton receteSilButton;
    private javax.swing.JComboBox<String> selectDoctorBox;
    private javax.swing.JButton silHastaButton;
    private javax.swing.JLabel statusField;
    private javax.swing.JTextField taniField;
    // End of variables declaration//GEN-END:variables
}
